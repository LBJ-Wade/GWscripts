[workflow]
; basic information used by the workflow generator
file-retention-level = all_triggers
; The start/end times here are just used for file naming. They can be set
; to anything -- they aren't used for anything, and have no effect on the
; analysis. The actual analysis times used are set by the [data] section in
; the configuration files given to pycbc_inference (specified in the events
; config file).
start-time = 1126259200
end-time = 1126259600 

[workflow-ifos]
; The ifos listed here are just used for file naming, it doesn't matter if
; they are not consistent with the actual detectors analyzed.
h1 =
l1 =
v1 =

[extract_posterior]
; Here, we'll ensure that the output parameters are such that mass1 >= mass2
; (and associated spins), change comoving volume into redshift and distance,
; add mchirp, q, chi_eff, and chi_p to the posterior files.
parameters = 'mass1_from_mchirp_q(srcmchirp,q):srcmass1'
             'mass2_from_mchirp_q(srcmchirp,q):srcmass2'
	     srcmchirp q spin1_a spin2_a spin1_polar spin2_polar spin1_azimuthal spin2_azimuthal  
	     coa_phase
             'chi_eff_from_spherical(mass1_from_mchirp_q(srcmchirp,q), mass2_from_mchirp_q(srcmchirp,q), spin1_a, spin1_polar, spin2_a, spin2_polar):chi_eff'
             'chi_p_from_spherical(mass1_from_mchirp_q(srcmchirp,q), mass2_from_mchirp_q(srcmchirp,q), spin1_a, spin1_azimuthal, spin1_polar, spin2_a, spin2_azimuthal, spin2_polar):chi_p'
             'redshift_from_comoving_volume(comoving_volume):redshift'
             'distance_from_comoving_volume(comoving_volume):distance'
             '*'
force =

[workflow-summary_table]
table-params = srcmass1 srcmass2
               srcmchirp q
               chi_eff chi_p
               ra dec delta_tc
               distance redshift
               'snr_from_loglr(loglikelihood-lognl):SNR'
print-metadata = 'trigger_time:$t_0$' 'analyzed_detectors:Detectors'

[workflow-summary_plots]
plot-group-mass1_mass2 = srcmass1 srcmass2
plot-group-mchirp_q = srcmchirp q
plot-group-inc_distance = inclination distance
plot-group-chip_chieff = chi_p chi_eff

[workflow-plot_params]
plot-group-masses = 'srcmass1:$m_1$'
                    'srcmass2:$m_2$'
                    'srcmchirp:$\mathcal{M}_c$'
		    q
		    chi_eff
		    distance inclination
plot-group-spins = spin1_a spin2_a
                   spin1_azimuthal spin2_azimuthal
                   spin1_polar spin2_polar
                   chi_eff chi_p
plot-group-extrinsic = ra dec delta_tc inclination distance coa_phase redshift

[executables]
inference = ${which:run_pycbc_inference}
extract_posterior = ${which:pycbc_inference_extract_samples}
plot_posterior = ${which:pycbc_inference_plot_posterior}
plot_posterior_summary = ${which:pycbc_inference_plot_posterior}
plot_prior = ${which:pycbc_inference_plot_prior}
table_summary = ${which:pycbc_inference_table_summary}
create_fits_file = ${which:pycbc_inference_create_fits}
plot_skymap = ${which:pycbc_inference_plot_skymap}
plot_spectrum = ${which:pycbc_plot_psd_file}
results_page = ${which:pycbc_make_html_page}
plot_dynesty_run = ${which:pycbc_inference_plot_dynesty_run}
plot_dynesty_traceplot = ${which:pycbc_inference_plot_dynesty_traceplot}

[pegasus_profile]
condor|+MaxRunTimeHours = 1

[pegasus_profile-inference]
condor|request_memory = 40G
condor|+MaxRunTimeHours = 10
condor|request_cpus = ${inference|nprocesses}

[pegasus_profile-plot_prior]
condor|request_memory = 4G

[pegasus_profile-plot_skymap]
condor|request_memory = 4G

[pegasus_profile-plot_posterior]
condor|request_memory = 4G

[pegasus_profile-plot_posterior_summary]
condor|request_memory = 4G

[pegasus_profile-plot_samples]
condor|request_memory = 4G

[pegasus_profile-create_fits_file]
condor|request_memory = 16G

[pegasus_profile-plot_dynesty_run]
condor|request_memory = 16G

[pegasus_profile-plot_dynesty_traceplot]
condor|request_memory = 16G

[inference]
verbose =
nprocesses = 64

[plot_posterior_summary]
plot-contours =
plot-marginal =
plot-density =
density-cmap = Blues
contour-color = black

[plot_posterior]
plot-contours =
plot-marginal =
plot-scatter =
z-arg = snr

[create_fits_file]
maxpts = 1000
tc = 'trigger_time+delta_tc'

[plot_skymap]
colormap = ${plot_posterior_summary|density-cmap}

[plot_prior]

[table_summary]

[plot_spectrum]
dyn-range-factor = 1

[plot_dynesty_run]

[plot_dynesty_traceplot]

[results_page]
analysis-title = "Inference results"
